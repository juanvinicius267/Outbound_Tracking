#pragma checksum "C:\Users\ssbjvq\source\repos\Br.Sa.Scania.TrackNTrace.Outbound.Maritimo\Br.Sa.Scania.TrackNTrace.Outbound.Maritimo\Views\CadastroDePontos\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c219f394dea5001f3c28a0c02b459e1e9e63e6da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CadastroDePontos_Index), @"mvc.1.0.view", @"/Views/CadastroDePontos/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CadastroDePontos/Index.cshtml", typeof(AspNetCore.Views_CadastroDePontos_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "C:\Users\ssbjvq\source\repos\Br.Sa.Scania.TrackNTrace.Outbound.Maritimo\Br.Sa.Scania.TrackNTrace.Outbound.Maritimo\Views\_ViewImports.cshtml"
using Br.Sa.Scania.TrackNTrace.Outbound.Maritimo.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c219f394dea5001f3c28a0c02b459e1e9e63e6da", @"/Views/CadastroDePontos/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c6945bfa9f475c2edcf5073fb9e397adf07618fe", @"/Views/_ViewImports.cshtml")]
    public class Views_CadastroDePontos_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/CadastroDePontos/Logica_CadastroDePontos.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 29, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            EndContext();
            BeginContext(29, 1382, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c219f394dea5001f3c28a0c02b459e1e9e63e6da3990", async() => {
                BeginContext(35, 1369, true);
                WriteLiteral(@"
    <meta content=""X-UA-Compatible"" http-equiv=""IE=edge"">
    <noscript><meta content=""0;url=https://static.scania.com/vendors/components/pure-js/nonJS-browsers/1.0.0/nonJS-browsers.html"" http-equiv=""refresh""></noscript>
    <script src=""https://static.scania.com/vendors/components/pure-js/browser-reject/1.0.0/js/browser-reject.js""></script>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <title>Track&Trace - Outbound</title>
    <script src=""https://static.scania.com/build/global/3.5.3-1/js/corporate-ui.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/openlayers/4.6.5/ol-debug.js"" type=""text/javascript""></script>
    <script src=""https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL""></script>
    <link rel=""stylesheet"" href=""https://openlayers.org/en/v5.3.0/css/ol.css"" type=""text/css"">
    <script src=""https://cdn.polyfill.io/v2/polyfill.min.js?featur");
                WriteLiteral(@"es=requestAnimationFrame,Element.prototype.classList,URL""></script>
    <script src=""https://code.jquery.com/jquery-2.2.3.min.js""></script>
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"">
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js""></script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1411, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(1415, 23841, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c219f394dea5001f3c28a0c02b459e1e9e63e6da6623", async() => {
                BeginContext(1421, 23754, true);
                WriteLiteral(@"
    <section>
        <div class=""container"">
            <h1><img src=""https://i.imgur.com/tGBJdEV.png"" alt="""" style=""width:30px; height:40px"" /> - Cadastrado de portos  </h1>
            <hr>
            
            <div class=""row"">
                <div class=""col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6"">
                    <div class="""">
                        <div class="""">
                            <label for="" Nome do porto""> Nome do porto</label>
                            <input id=""portName"" type=""text"" class=""form-control"" placeholder="" Nome do porto"">
                        </div>
                        <div class="""">
                            <label for=""Pais"">Pais</label>
                            <form action=""/action_page.php"">
                                <select id=""country"" class=""form-control"">

                                    <option value=""Afghanistan"">Afghanistan</option>
                                    <option value=""Åland Islands"">Åland Islands");
                WriteLiteral(@"</option>
                                    <option value=""Albania"">Albania</option>
                                    <option value=""Algeria"">Algeria</option>
                                    <option value=""American Samoa"">American Samoa</option>
                                    <option value=""Andorra"">Andorra</option>
                                    <option value=""Angola"">Angola</option>
                                    <option value=""Anguilla"">Anguilla</option>
                                    <option value=""Antarctica"">Antarctica</option>
                                    <option value=""Antigua and Barbuda"">Antigua and Barbuda</option>
                                    <option value=""Argentina"">Argentina</option>
                                    <option value=""Armenia"">Armenia</option>
                                    <option value=""Aruba"">Aruba</option>
                                    <option value=""Australia"">Australia</option>
                             ");
                WriteLiteral(@"       <option value=""Austria"">Austria</option>
                                    <option value=""Azerbaijan"">Azerbaijan</option>
                                    <option value=""Bahamas"">Bahamas</option>
                                    <option value=""Bahrain"">Bahrain</option>
                                    <option value=""Bangladesh"">Bangladesh</option>
                                    <option value=""Barbados"">Barbados</option>
                                    <option value=""Belarus"">Belarus</option>
                                    <option value=""Belgium"">Belgium</option>
                                    <option value=""Belize"">Belize</option>
                                    <option value=""Benin"">Benin</option>
                                    <option value=""Bermuda"">Bermuda</option>
                                    <option value=""Bhutan"">Bhutan</option>
                                    <option value=""Bolivia"">Bolivia</option>
                                 ");
                WriteLiteral(@"   <option value=""Bosnia and Herzegovina"">Bosnia and Herzegovina</option>
                                    <option value=""Botswana"">Botswana</option>
                                    <option value=""Bouvet Island"">Bouvet Island</option>
                                    <option value=""Brazil"">Brazil</option>
                                    <option value=""British Indian Ocean Territory"">British Indian Ocean Territory</option>
                                    <option value=""Brunei Darussalam"">Brunei Darussalam</option>
                                    <option value=""Bulgaria"">Bulgaria</option>
                                    <option value=""Burkina Faso"">Burkina Faso</option>
                                    <option value=""Burundi"">Burundi</option>
                                    <option value=""Cambodia"">Cambodia</option>
                                    <option value=""Cameroon"">Cameroon</option>
                                    <option value=""Canada"">Canada</option>");
                WriteLiteral(@"
                                    <option value=""Cape Verde"">Cape Verde</option>
                                    <option value=""Cayman Islands"">Cayman Islands</option>
                                    <option value=""Central African Republic"">Central African Republic</option>
                                    <option value=""Chad"">Chad</option>
                                    <option value=""Chile"">Chile</option>
                                    <option value=""China"">China</option>
                                    <option value=""Christmas Island"">Christmas Island</option>
                                    <option value=""Cocos (Keeling) Islands"">Cocos (Keeling) Islands</option>
                                    <option value=""Colombia"">Colombia</option>
                                    <option value=""Comoros"">Comoros</option>
                                    <option value=""Congo"">Congo</option>
                                    <option value=""Congo, The Democratic Repu");
                WriteLiteral(@"blic of The"">Congo, The Democratic Republic of The</option>
                                    <option value=""Cook Islands"">Cook Islands</option>
                                    <option value=""Costa Rica"">Costa Rica</option>
                                    <option value=""Cote D'ivoire"">Cote D'ivoire</option>
                                    <option value=""Croatia"">Croatia</option>
                                    <option value=""Cuba"">Cuba</option>
                                    <option value=""Cyprus"">Cyprus</option>
                                    <option value=""Czech Republic"">Czech Republic</option>
                                    <option value=""Denmark"">Denmark</option>
                                    <option value=""Djibouti"">Djibouti</option>
                                    <option value=""Dominica"">Dominica</option>
                                    <option value=""Dominican Republic"">Dominican Republic</option>
                                    <option v");
                WriteLiteral(@"alue=""Ecuador"">Ecuador</option>
                                    <option value=""Egypt"">Egypt</option>
                                    <option value=""El Salvador"">El Salvador</option>
                                    <option value=""Equatorial Guinea"">Equatorial Guinea</option>
                                    <option value=""Eritrea"">Eritrea</option>
                                    <option value=""Estonia"">Estonia</option>
                                    <option value=""Ethiopia"">Ethiopia</option>
                                    <option value=""Falkland Islands (Malvinas)"">Falkland Islands (Malvinas)</option>
                                    <option value=""Faroe Islands"">Faroe Islands</option>
                                    <option value=""Fiji"">Fiji</option>
                                    <option value=""Finland"">Finland</option>
                                    <option value=""France"">France</option>
                                    <option value=""French Guian");
                WriteLiteral(@"a"">French Guiana</option>
                                    <option value=""French Polynesia"">French Polynesia</option>
                                    <option value=""French Southern Territories"">French Southern Territories</option>
                                    <option value=""Gabon"">Gabon</option>
                                    <option value=""Gambia"">Gambia</option>
                                    <option value=""Georgia"">Georgia</option>
                                    <option value=""Germany"">Germany</option>
                                    <option value=""Ghana"">Ghana</option>
                                    <option value=""Gibraltar"">Gibraltar</option>
                                    <option value=""Greece"">Greece</option>
                                    <option value=""Greenland"">Greenland</option>
                                    <option value=""Grenada"">Grenada</option>
                                    <option value=""Guadeloupe"">Guadeloupe</option>
 ");
                WriteLiteral(@"                                   <option value=""Guam"">Guam</option>
                                    <option value=""Guatemala"">Guatemala</option>
                                    <option value=""Guernsey"">Guernsey</option>
                                    <option value=""Guinea"">Guinea</option>
                                    <option value=""Guinea-bissau"">Guinea-bissau</option>
                                    <option value=""Guyana"">Guyana</option>
                                    <option value=""Haiti"">Haiti</option>
                                    <option value=""Heard Island and Mcdonald Islands"">Heard Island and Mcdonald Islands</option>
                                    <option value=""Holy See (Vatican City State)"">Holy See (Vatican City State)</option>
                                    <option value=""Honduras"">Honduras</option>
                                    <option value=""Hong Kong"">Hong Kong</option>
                                    <option value=""Hungary"">H");
                WriteLiteral(@"ungary</option>
                                    <option value=""Iceland"">Iceland</option>
                                    <option value=""India"">India</option>
                                    <option value=""Indonesia"">Indonesia</option>
                                    <option value=""Iran, Islamic Republic of"">Iran, Islamic Republic of</option>
                                    <option value=""Iraq"">Iraq</option>
                                    <option value=""Ireland"">Ireland</option>
                                    <option value=""Isle of Man"">Isle of Man</option>
                                    <option value=""Israel"">Israel</option>
                                    <option value=""Italy"">Italy</option>
                                    <option value=""Jamaica"">Jamaica</option>
                                    <option value=""Japan"">Japan</option>
                                    <option value=""Jersey"">Jersey</option>
                                    <option v");
                WriteLiteral(@"alue=""Jordan"">Jordan</option>
                                    <option value=""Kazakhstan"">Kazakhstan</option>
                                    <option value=""Kenya"">Kenya</option>
                                    <option value=""Kiribati"">Kiribati</option>
                                    <option value=""Korea, Democratic People's Republic of"">Korea, Democratic People's Republic of</option>
                                    <option value=""Korea, Republic of"">Korea, Republic of</option>
                                    <option value=""Kuwait"">Kuwait</option>
                                    <option value=""Kyrgyzstan"">Kyrgyzstan</option>
                                    <option value=""Lao People's Democratic Republic"">Lao People's Democratic Republic</option>
                                    <option value=""Latvia"">Latvia</option>
                                    <option value=""Lebanon"">Lebanon</option>
                                    <option value=""Lesotho"">Lesotho</opti");
                WriteLiteral(@"on>
                                    <option value=""Liberia"">Liberia</option>
                                    <option value=""Libyan Arab Jamahiriya"">Libyan Arab Jamahiriya</option>
                                    <option value=""Liechtenstein"">Liechtenstein</option>
                                    <option value=""Lithuania"">Lithuania</option>
                                    <option value=""Luxembourg"">Luxembourg</option>
                                    <option value=""Macao"">Macao</option>
                                    <option value=""Macedonia, The Former Yugoslav Republic of"">Macedonia, The Former Yugoslav Republic of</option>
                                    <option value=""Madagascar"">Madagascar</option>
                                    <option value=""Malawi"">Malawi</option>
                                    <option value=""Malaysia"">Malaysia</option>
                                    <option value=""Maldives"">Maldives</option>
                                   ");
                WriteLiteral(@" <option value=""Mali"">Mali</option>
                                    <option value=""Malta"">Malta</option>
                                    <option value=""Marshall Islands"">Marshall Islands</option>
                                    <option value=""Martinique"">Martinique</option>
                                    <option value=""Mauritania"">Mauritania</option>
                                    <option value=""Mauritius"">Mauritius</option>
                                    <option value=""Mayotte"">Mayotte</option>
                                    <option value=""Mexico"">Mexico</option>
                                    <option value=""Micronesia, Federated States of"">Micronesia, Federated States of</option>
                                    <option value=""Moldova, Republic of"">Moldova, Republic of</option>
                                    <option value=""Monaco"">Monaco</option>
                                    <option value=""Mongolia"">Mongolia</option>
                           ");
                WriteLiteral(@"         <option value=""Montenegro"">Montenegro</option>
                                    <option value=""Montserrat"">Montserrat</option>
                                    <option value=""Morocco"">Morocco</option>
                                    <option value=""Mozambique"">Mozambique</option>
                                    <option value=""Myanmar"">Myanmar</option>
                                    <option value=""Namibia"">Namibia</option>
                                    <option value=""Nauru"">Nauru</option>
                                    <option value=""Nepal"">Nepal</option>
                                    <option value=""Netherlands"">Netherlands</option>
                                    <option value=""Netherlands Antilles"">Netherlands Antilles</option>
                                    <option value=""New Caledonia"">New Caledonia</option>
                                    <option value=""New Zealand"">New Zealand</option>
                                    <option value=""");
                WriteLiteral(@"Nicaragua"">Nicaragua</option>
                                    <option value=""Niger"">Niger</option>
                                    <option value=""Nigeria"">Nigeria</option>
                                    <option value=""Niue"">Niue</option>
                                    <option value=""Norfolk Island"">Norfolk Island</option>
                                    <option value=""Northern Mariana Islands"">Northern Mariana Islands</option>
                                    <option value=""Norway"">Norway</option>
                                    <option value=""Oman"">Oman</option>
                                    <option value=""Pakistan"">Pakistan</option>
                                    <option value=""Palau"">Palau</option>
                                    <option value=""Palestinian Territory, Occupied"">Palestinian Territory, Occupied</option>
                                    <option value=""Panama"">Panama</option>
                                    <option value=""Papua New ");
                WriteLiteral(@"Guinea"">Papua New Guinea</option>
                                    <option value=""Paraguay"">Paraguay</option>
                                    <option value=""Peru"">Peru</option>
                                    <option value=""Philippines"">Philippines</option>
                                    <option value=""Pitcairn"">Pitcairn</option>
                                    <option value=""Poland"">Poland</option>
                                    <option value=""Portugal"">Portugal</option>
                                    <option value=""Puerto Rico"">Puerto Rico</option>
                                    <option value=""Qatar"">Qatar</option>
                                    <option value=""Reunion"">Reunion</option>
                                    <option value=""Romania"">Romania</option>
                                    <option value=""Russian Federation"">Russian Federation</option>
                                    <option value=""Rwanda"">Rwanda</option>
                       ");
                WriteLiteral(@"             <option value=""Saint Helena"">Saint Helena</option>
                                    <option value=""Saint Kitts and Nevis"">Saint Kitts and Nevis</option>
                                    <option value=""Saint Lucia"">Saint Lucia</option>
                                    <option value=""Saint Pierre and Miquelon"">Saint Pierre and Miquelon</option>
                                    <option value=""Saint Vincent and The Grenadines"">Saint Vincent and The Grenadines</option>
                                    <option value=""Samoa"">Samoa</option>
                                    <option value=""San Marino"">San Marino</option>
                                    <option value=""Sao Tome and Principe"">Sao Tome and Principe</option>
                                    <option value=""Saudi Arabia"">Saudi Arabia</option>
                                    <option value=""Senegal"">Senegal</option>
                                    <option value=""Serbia"">Serbia</option>
                   ");
                WriteLiteral(@"                 <option value=""Seychelles"">Seychelles</option>
                                    <option value=""Sierra Leone"">Sierra Leone</option>
                                    <option value=""Singapore"">Singapore</option>
                                    <option value=""Slovakia"">Slovakia</option>
                                    <option value=""Slovenia"">Slovenia</option>
                                    <option value=""Solomon Islands"">Solomon Islands</option>
                                    <option value=""Somalia"">Somalia</option>
                                    <option value=""South Africa"">South Africa</option>
                                    <option value=""South Georgia and The South Sandwich Islands"">South Georgia and The South Sandwich Islands</option>
                                    <option value=""Spain"">Spain</option>
                                    <option value=""Sri Lanka"">Sri Lanka</option>
                                    <option value=""Sudan"">Sud");
                WriteLiteral(@"an</option>
                                    <option value=""Suriname"">Suriname</option>
                                    <option value=""Svalbard and Jan Mayen"">Svalbard and Jan Mayen</option>
                                    <option value=""Swaziland"">Swaziland</option>
                                    <option value=""Sweden"">Sweden</option>
                                    <option value=""Switzerland"">Switzerland</option>
                                    <option value=""Syrian Arab Republic"">Syrian Arab Republic</option>
                                    <option value=""Taiwan, Province of China"">Taiwan, Province of China</option>
                                    <option value=""Tajikistan"">Tajikistan</option>
                                    <option value=""Tanzania, United Republic of"">Tanzania, United Republic of</option>
                                    <option value=""Thailand"">Thailand</option>
                                    <option value=""Timor-leste"">Timor-leste</");
                WriteLiteral(@"option>
                                    <option value=""Togo"">Togo</option>
                                    <option value=""Tokelau"">Tokelau</option>
                                    <option value=""Tonga"">Tonga</option>
                                    <option value=""Trinidad and Tobago"">Trinidad and Tobago</option>
                                    <option value=""Tunisia"">Tunisia</option>
                                    <option value=""Turkey"">Turkey</option>
                                    <option value=""Turkmenistan"">Turkmenistan</option>
                                    <option value=""Turks and Caicos Islands"">Turks and Caicos Islands</option>
                                    <option value=""Tuvalu"">Tuvalu</option>
                                    <option value=""Uganda"">Uganda</option>
                                    <option value=""Ukraine"">Ukraine</option>
                                    <option value=""United Arab Emirates"">United Arab Emirates</option>
 ");
                WriteLiteral(@"                                   <option value=""United Kingdom"">United Kingdom</option>
                                    <option value=""United States"">United States</option>
                                    <option value=""United States Minor Outlying Islands"">United States Minor Outlying Islands</option>
                                    <option value=""Uruguay"">Uruguay</option>
                                    <option value=""Uzbekistan"">Uzbekistan</option>
                                    <option value=""Vanuatu"">Vanuatu</option>
                                    <option value=""Venezuela"">Venezuela</option>
                                    <option value=""Viet Nam"">Viet Nam</option>
                                    <option value=""Virgin Islands, British"">Virgin Islands, British</option>
                                    <option value=""Virgin Islands, U.S."">Virgin Islands, U.S.</option>
                                    <option value=""Wallis and Futuna"">Wallis and Futuna</op");
                WriteLiteral(@"tion>
                                    <option value=""Western Sahara"">Western Sahara</option>
                                    <option value=""Yemen"">Yemen</option>
                                    <option value=""Zambia"">Zambia</option>
                                    <option value=""Zimbabwe"">Zimbabwe</option>

                                </select>
                            </form>
                        </div>                      
                    </div>
                    <div class="""" style="""">
                        <div class="""">
                            <label for=""Latitude"">Latitude</label>
                            <input id=""latitutde"" type=""text"" class=""form-control"" placeholder=""Latitude"">
                        </div>
                        <div class="""">
                            <label for=""Longitude"">Longitude</label>
                            <input id=""longitude"" type=""text"" class=""form-control"" placeholder=""Longitude"">
                   ");
                WriteLiteral(@"     </div>
                        <br />
                        <input type=""button"" value=""Enviar"" id=""buttonSend"" class=""btn btn-success"" />
                    </div>
                </div>
                <div class=""col-6 col-sm-6 col-md-6 col-lg-6 col-xl-6"">
                    <div id=""mapMoreInfo"" style=""width: 100%;height: 5%; float:right; top:100px""></div>
                </div>
            </div>
            <hr>
            <div class=""table-light"">
                <h1><img src=""https://i.imgur.com/tGBJdEV.png"" alt="""" style=""width:30px; height:40px"" /> - Portos Cadastrados  </h1>
            </div>
            <table class=""table table-dark"">
                <thead>
                    <tr>
                        <th scope=""col"">Nome do Porto</th>
                        <th scope=""col"">Longitude</th>
                        <th scope=""col"">Latitude</th>
                        <th scope=""col"">País</th>
                    </tr>
                </thead>
                <t");
                WriteLiteral("body id=\"tableItems\" style=\"max-height:10px\"></tbody>\r\n            </table>\r\n            <hr>\r\n        </div>\r\n    </section>\r\n\r\n\r\n    <script src=\"//code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n    ");
                EndContext();
                BeginContext(25175, 72, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c219f394dea5001f3c28a0c02b459e1e9e63e6da32195", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(25247, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(25256, 13, true);
            WriteLiteral("\r\n\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
